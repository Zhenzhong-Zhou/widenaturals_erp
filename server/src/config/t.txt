1️⃣ Group by location_id (Summarize per Location)

SELECT
  i.product_id,
  i.location_id,
  l.name AS location_name,
  COALESCE(NULLIF(p.product_name, ''), i.identifier) AS item_name,
  COUNT(DISTINCT i.id) AS total_inventory_entries,
  SUM(i.quantity) AS total_quantity,
  SUM(wi.available_quantity) AS total_available_quantity,
  SUM(wi.reserved_quantity) AS total_reserved_quantity,
  COUNT(DISTINCT wil.id) AS total_lots,
  SUM(wil.quantity) AS total_lot_quantity,
  MIN(wil.manufacture_date) AS earliest_manufacture_date,
  MIN(wil.expiry_date) AS nearest_expiry_date
FROM inventory i
LEFT JOIN products p ON i.product_id = p.id
LEFT JOIN locations l ON i.location_id = l.id
LEFT JOIN warehouse_inventory wi ON i.id = wi.inventory_id
LEFT JOIN warehouse_inventory_lots wil ON wi.warehouse_id = wil.warehouse_id AND i.id = wil.inventory_id
GROUP BY i.product_id, i.location_id, l.name, p.product_name;


2️⃣ Group by warehouse_id (Summarize per Warehouse)

SELECT
  i.product_id,
  w.id AS warehouse_id,
  w.name AS warehouse_name,
  COALESCE(NULLIF(p.product_name, ''), i.identifier) AS item_name,
  COUNT(DISTINCT i.id) AS total_inventory_entries,
  SUM(i.quantity) AS total_quantity,
  SUM(wi.available_quantity) AS total_available_quantity,
  SUM(wi.reserved_quantity) AS total_reserved_quantity,
  COUNT(DISTINCT wil.id) AS total_lots,
  SUM(wil.quantity) AS total_lot_quantity,
  MIN(wil.manufacture_date) AS earliest_manufacture_date,
  MIN(wil.expiry_date) AS nearest_expiry_date
FROM inventory i
LEFT JOIN products p ON i.product_id = p.id
LEFT JOIN warehouse_inventory wi ON i.id = wi.inventory_id
LEFT JOIN warehouses w ON wi.warehouse_id = w.id
LEFT JOIN warehouse_inventory_lots wil ON wi.warehouse_id = wil.warehouse_id AND i.id = wil.inventory_id
GROUP BY i.product_id, w.id, w.name, p.product_name;


2️⃣ Warehouse-Level Inventory (Group by warehouse_id)
✅ Use this to track total inventory per warehouse.

SELECT
  i.product_id,
  w.id AS warehouse_id,
  w.name AS warehouse_name,
  COALESCE(NULLIF(p.product_name, ''), i.identifier) AS item_name,
  COUNT(DISTINCT i.id) AS total_inventory_entries,
  SUM(i.quantity) AS total_quantity,
  SUM(wi.available_quantity) AS total_available_quantity,
  SUM(wi.reserved_quantity) AS total_reserved_quantity,
  COUNT(DISTINCT wil.id) AS total_lots,
  SUM(wil.quantity) AS total_lot_quantity,
  MIN(wil.manufacture_date) AS earliest_manufacture_date,
  MIN(wil.expiry_date) AS nearest_expiry_date
FROM inventory i
LEFT JOIN products p ON i.product_id = p.id  -- ✅ Added this JOIN
LEFT JOIN warehouse_inventory wi ON i.id = wi.inventory_id
LEFT JOIN warehouses w ON wi.warehouse_id = w.id
LEFT JOIN warehouse_inventory_lots wil ON wi.warehouse_id = wil.warehouse_id AND i.id = wil.inventory_id
GROUP BY i.product_id, w.id, w.name, p.product_name, i.identifier; -- ✅ Added i.identifier to GROUP BY



3️⃣ Location-Level Inventory (Group by location_id)
✅ Use this to track total inventory per location.

SELECT
  i.product_id,
  w.id AS warehouse_id,
  w.name AS warehouse_name,
  COALESCE(NULLIF(p.product_name, ''), i.identifier) AS item_name,
  COUNT(DISTINCT i.id) AS total_inventory_entries,
  SUM(i.quantity) AS total_quantity,
  SUM(wi.available_quantity) AS total_available_quantity,
  SUM(wi.reserved_quantity) AS total_reserved_quantity,
  COUNT(DISTINCT wil.id) AS total_lots,
  SUM(wil.quantity) AS total_lot_quantity,
  MIN(wil.manufacture_date) AS earliest_manufacture_date,
  MIN(wil.expiry_date) AS nearest_expiry_date
FROM inventory i
LEFT JOIN warehouse_inventory wi ON i.id = wi.inventory_id
LEFT JOIN warehouses w ON wi.warehouse_id = w.id
LEFT JOIN warehouse_inventory_lots wil ON wi.warehouse_id = wil.warehouse_id AND i.id = wil.inventory_id
GROUP BY i.product_id, w.id, w.name, p.product_name;


4️⃣ Global Inventory Summary (Group by product_id)
✅ Use this for company-wide inventory tracking.

SELECT
  i.product_id,
  COALESCE(NULLIF(p.product_name, ''), 'Unknown') AS item_name,
  COUNT(DISTINCT i.id) AS total_inventory_entries,
  SUM(i.quantity) AS total_quantity,
  SUM(wi.available_quantity) AS total_available_quantity,
  SUM(wi.reserved_quantity) AS total_reserved_quantity,
  COUNT(DISTINCT wil.id) AS total_lots,
  SUM(wil.quantity) AS total_lot_quantity,
  MIN(wil.manufacture_date) AS earliest_manufacture_date,
  MIN(wil.expiry_date) AS nearest_expiry_date
FROM inventory i
LEFT JOIN products p ON i.product_id = p.id
LEFT JOIN warehouse_inventory wi ON i.id = wi.inventory_id
LEFT JOIN warehouse_inventory_lots wil ON wi.warehouse_id = wil.warehouse_id AND i.id = wil.inventory_id
GROUP BY i.product_id, p.product_name;

